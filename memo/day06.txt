day06

정규화

정규화 : 	
	삽입/수정/삭제의 이상현상을 제거, 데이터 중복 최소화
	대부분 3차 정규화 까지만 진행
	5차까지 진행을 하다보면 하나의 테이블을 계속 분리해서
	데이터를 가져오는 작업을 할 때 불편하다. 그래서 보통 3차
	정규화까지 진행을 한다. 

1차 정규화(1NF) :
	하나의 컬럼에는 값이 1개만 있어야 한다.
	반복적인 취미를 체크할 때 체크박스를 이용해서 여러개를 선택할 수 있다.

	상품명
	바지1, 바지2, 바지3 -> 하나의 행에 여러개의 값을 넣으면 안된다.

	- 정규화 진행
	상품명
	바지1
	바지2
	바지3

2차 정규화(2NF) :
	테이블의 모든 컬럼은 서로 관계가 있어야 한다.
	모든 컬럼이 서로 관계가 없는경우

	USER
	이름	나이	상품명
	홍길동 	10 	바지	
	김디비 	23	치마	
	오라클	12	자켓

	- 정규화 진행
	USER
	이름	나이	
	홍길동 	10    ->  정규화를 진행하고 나면 하나의 테이블에는	
	김디비 	23	관련있는 컬럼만 남게 된다.
	오라클	12

	PRODUCT
	나이	상품명
	10	바지
	23	치마	
	12 	자켓

3차 정규화(3NF) :
	하나의 컬럼이 다른 컬럼을 대표할 수 없다.

	이름	시	구	동	우편번호
	홍길동	인천시	부평구	부평1동 	12345
	김디비	인천시	부평구	부평2동	44332

	- 정규화 진행
	이름	우편번호
	홍길동	12345
	김디비	44332

	우편번호	시	구	동
	12345	인천시	부평구	부평1동
	44332	인천시	부평구	부평2동

데이터베이스에서 정규화가 필요한 이유 :
	데이터베이스를 잘못 설계하면 불필요한 데이터의 중복으로 인해 공간이
	낭비될 수 있다. 이러한 현상을 이상현상(Anomaly) 라고 한다.

	조합키(두개의 컬럼에서 데이터를 조합했을 때 겹치면 에러)
	
	조합키(사원번호 + 프로젝트코드)

	사원번호		이름	부서	   프로젝트코드	급여	부서별명수
	230328001	홍길동	개발팀	   ABC001	3000	4	
	230328001	홍길동	개발팀	   CBA1112	2000	4
	230328001	홍길동	개발팀	   EFG9991	4000	4
	230328002	김디비	기획팀	   HIJ8282	5000	2
	230328003	오라클	디자인팀	   MNO3000	7000	3

이상현상의 종류 :
	- 삽입이상 : 새 데이터를 삽입하기 위해 불필요한 데이터도 삽입해야 하는 문제
		EX) 담당 프로젝트가 정해지지 않은 사원이 있다면, 프로젝트 코드에 
		NULL을 작성할 수 없으므로 이 사원은 테이블에 추가할 수 없다.
		따라서'미정'이라는 프로젝트 코드를 따로 만들어서 삽입해야 한다.

	- 갱신이상 : 중복 행 중 일부만 변경하여 데이터가 불일치 하게 되는 모순의 문제
		EX) 한명의 사원은 반드시 하나의 부서에만 속할 수 있다.
		홍길동이 보안팀으로 부서를 옮길경우 3개의 행을 모두 갱신해 주지 
		않는다면 개발팀인지 보안팀인지 알 수 없다.

	- 삭제이상 : 행을 삭제하면 꼭 필요한 데이터까지 함께 삭제되는 문제
		EX) 김디비가 담당한 프로젝트가 드랍이 된다면 김디비행을 모두 
		삭제하게 된다. 따라서 김디비의 사원번호, 연봉과 같은 꼭 필요한 정보
		까지도 샅이 삭제가 된다. 이런 현상을 삭제 이상이라고 한다.

함수(function) : X -> Y

	X : 결정자 -> X 가 Y를 결정
	Y : 종속자 -> Y 가 X에 종속

NULL : 정의되지 않은 값
	빈워두는 대신 미정의 값을 부여할 때 사용 가능
	(PK에서는 불가능, FK는 가능)

NOT NULL 제약조건 
	ALTER TABLE 테이블명 MODIFY 컬럼명 NOT NULL;
	
제약조건 삭제
	ALTER TABLE 테이블명  DROP CONSTRAINT 제약조건 이름;

조건식
	WHERE 컬럼명 IS NULL -> NULL이 들어가 있는 데이터를 조회
	WHERE 컬렴명 IS NOT NULL -> NULL이 아닌 데이터를 조회

NULL값을 일시적으로 다른값으로 변경
	NVL() : NULL값 대신 다른 값으로 변경 후 조회
	NVL2() : NULL일 때의 변경할 값, NULL이 아닐 때 변경할값을 각각 설정

[ 내장함수 ]
	기본적으로 쿼리문을 더욱 강력하게 하고, 데이터값을 조작하는데 도움이
	되도록 하는 문법입니다.
	
	1) 자원에 대한 연산을 수행할 수 있습니다.
	2) 개별적인 데이터 항목을 수행할 수 있습니다.

		1. 숫자형 함수
		2. 문자형 함수
		3. 날짜형 함수




	

		

